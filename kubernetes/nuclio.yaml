# Copyright 2017 The Nuclio Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Define a "function" custom resource definition - extending the k8s API to allow management of "function" resources
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nucliofunctions.nuclio.io
spec:
  group: nuclio.io
  names:
    kind: NuclioFunction
    plural: nucliofunctions
    singular: nucliofunction
  scope: Namespaced
  version: v1beta1

---
# Define a "project" custom resource definition - extending the k8s API to allow management of "project" resources
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nuclioprojects.nuclio.io
spec:
  group: nuclio.io
  names:
    kind: NuclioProject
    plural: nuclioprojects
    singular: nuclioproject
  scope: Namespaced
  version: v1beta1

---
# Define a "functionevent" custom resource definition - extending the k8s API to allow management of "functionevent" resources
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nucliofunctionevents.nuclio.io
spec:
  group: nuclio.io
  names:
    kind: NuclioFunctionEvent
    plural: nucliofunctionevents
    singular: nucliofunctionevent
  scope: Namespaced
  version: v1beta1

---
# All Nuclio services are bound to the "nuclio" service account. In RBAC enabled setups, this service account is
# bound to specific roles limiting what the services can do
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nuclio
  namespace: nuclio

---
# The nuclio controller listens for changes on the function CRD and creates the proper deployment, service, etc
# for the function
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nuclio-controller
  namespace: nuclio
spec:
  replicas: 1
  selector:
    matchLabels:
      nuclio.io/app: controller
      nuclio.io/env: test
      nuclio.io/class: service
  template:
    metadata:
      labels:
        nuclio.io/env: test
        nuclio.io/app: controller
        nuclio.io/class: service
      annotations:
        nuclio.io/version: 1.5.4
    spec:
      nodeSelector:
        jobmanager: active
        archType: amd64
      containers:
        - name: nuclio-controller
          image: harbor.sigsus.cn:8443/library/nuclio/controller:1.5.4-amd64
          env:
            - name: NUCLIO_CONTROLLER_IMAGE_PULL_SECRETS
              value: registry-credentials
      serviceAccountName: nuclio

---
# The Nuclio dashboard offers a UI to manage functions
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nuclio-dashboard
  namespace: nuclio
spec:
  selector:
    matchLabels:
      nuclio.io/env: test
      nuclio.io/app: dashboard
      nuclio.io/class: service
  template:
    metadata:
      labels:
        nuclio.io/env: test
        nuclio.io/app: dashboard
        nuclio.io/class: service
        app: nuclio
      annotations:
        nuclio.io/version: 1.5.4
    spec:
      nodeSelector:
        jobmanager: active
        archType: amd64
      hostNetwork: true
      containers:
        - name: nuclio-dashboard
          image: harbor.sigsus.cn:8443/library/nuclio/dashboard:1.4.8-amd64
          ports:
            - containerPort: 8070
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-sock
            - name: registry-credentials
              mountPath: '/etc/nuclio/dashboard/registry-credentials'
              readOnly: true
            - mountPath: /tmp
              name: tmp
          env:
            - name: NUCLIO_CHECK_FUNCTION_CONTAINERS_HEALTHINESS
              value: 'true'
            - name: no_proxy
              value: 172.28.0.1,${no_proxy}
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            tcpSocket:
              port: 8070
            timeoutSeconds: 10
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: registry-credentials
          secret:
            secretName: registry-credentials
            optional: true
        - name: tmp
          hostPath:
            path: /tmp
      serviceAccountName: nuclio
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  name: nuclio-dashboard
  namespace: nuclio
spec:
  selector:
    nuclio.io/app: dashboard
  ports:
    - name: admin
      port: 8070
      protocol: TCP
---

